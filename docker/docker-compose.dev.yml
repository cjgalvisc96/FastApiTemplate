version: "3.8"

services:
  backend:
    image: app_backend
    container_name: app_backend
    build:
      context: ${PWD}
      dockerfile: docker/fastapi/dev.Dockerfile
    env_file: ../dev.env
    restart: always
    volumes:
      - ..:/app/
    depends_on:
      - db
      - localstack
    expose:
      - 8000
      - 9500 # To expose debugger port
    ports:
      - "8000:8000"
      - "9500:9500" # To expose debugger port
    command: runserver_local
    networks:
      - app_network

  db:
    image: app_db
    container_name: app_db
    build:
      context: ${PWD}
      dockerfile: docker/db/dev.Dockerfile
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: "auctions"
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "password"
      MYSQL_ROOT_PASSWORD: "root"
    ports:
      - "3306:3306"
    healthcheck:
      test: "mysql --user=root --password=root --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10
    networks:
      - app_network

  celery-worker:
    image: app_celery_worker
    container_name: app_celery_worker
    build:
      context: ${PWD}
      dockerfile: docker/fastapi/dev.Dockerfile
    env_file:
      - ../dev.env
    volumes:
      - ..:/app/
    command: celery -A backend.config.celery.app_celery worker --autoscale=8,1 -P gevent -l INFO
    # command: celery -A config.celery.app_celery worker  --autoscale=8,1 -P gevent -l INFO --logfile=celery.log
    restart: unless-stopped
    links:
      - localstack
    depends_on:
      - redis
    networks:
      - app_network
  
  redis:
    image: redis:alpine3.18
    container_name: app_redis
    ports:
      - '6379:6379'
    healthcheck:
      test: "CMD redis-cli ping | grep PONG"
      interval: 1s
      timeout: 3s
      retries: 5

  celery-beat:
    image: app_celery_beat
    container_name: app_celery_beat
    build:
      context: ${PWD}
      dockerfile: docker/fastapi/dev.Dockerfile
    env_file:
      - ../dev.env
    volumes:
      - ..:/app/
    command: celery -A backend.config.celery.app_celery beat  -l INFO
    restart: unless-stopped
    depends_on:
      - celery-worker
    networks:
      - app_network

  localstack:
    image: localstack/localstack:2.1.0
    container_name: app_localstack
    ports:
      - "127.0.0.1:4566:4566" # LocalStack Gateway
    environment:
      - SERVICES=sqs
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./localstack_data}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - app_network
 
  aws-cli:
    image: amazon/aws-cli:2.11.22
    container_name: app_aws_cli 
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
    entrypoint: /bin/sh -c
    command: >
      "
        # Create localstack user
        aws configure set aws_access_key_id test --profile localstack
        aws configure set aws_secret_access_key test --profile localstack
        aws configure set region us-east-1 --profile localstack
      "
    depends_on:
      - localstack
    networks:
      - app_network
 
  # smtp-server:
  #   image: mailhog/mailhog:v1.0.1
  #   container_name: app_smtp_server_local
  #   expose:
  #     - 1025
  #     - 8025
  #   ports:
  #     - "1025:1025"
  #     - "8025:8025"
  #   networks:
  #     - app_network

networks:
  app_network:

volumes:
  mysql_data:
  localstack_data: